version: 2
models:
  - name: chained_1_to_many_joins
    description: |
      This model demonstrates chained or sequential 1-to-many joins. 
      - "Accounts" have many "users" and each user has many "tracks" (events).
      This means when these tables are joined together, each account record will be multiplied by the number of users and then by the number of tracks for each user.
      users will be multiplied by the number of tracks, but track will not be inflated. 

    meta:
      sql_filter: ${lightdash.attributes.is_admin_saas_demo} = 'true' or segment !=
        'Enterprise'
      joins:
        # üö® INTENTIONAL METRICS INFLATION DEMO üö®

        - join: fanouts_users
          sql_on: ${chained_1_to_many_joins.account_id} = ${fanouts_users.account_id}
          type: left
          fields:
            [
              user_id,
              unique_user_count,
              inflated_user_count,
              job_title,
              is_marketing_opted_in,
              unique_job_title_count,
              inflated_job_title_count,
              email,
              created_at,
              first_logged_in_at
            ]

        - join: fanouts_tracks
          sql_on: ${fanouts_users.user_id} = ${fanouts_tracks.user_id}
          type: left
          fields:
            [
              unique_event_count,
              inflated_event_count,
              event_name,
              timestamp,
              event_id
            ]

    columns:
      - name: account_id
        description: "The Account ID from our database"
        meta:
          dimension:
            type: string
            urls:
              - label: 'Open in CRM'
                url: https://demo_saas.com/example/account/${ value.raw }
          metrics:
            unique_accounts:
              type: count_distinct
              label: "‚úÖ FANOUT SAFE Unique Account Count"
              description: "‚úÖ CORRECT: Uses count_distinct so won't inflate"

            # üö® INFLATION DEMO METRICS üö®
            inflated_account_count:
              type: count
              label: "üö® INFLATED Account Count"
              description: "‚ùå WRONG: Uses COUNT instead of COUNT_DISTINCT - will inflate if we
                reference data from joined tables"

      - name: account_name
        description: "Name of this company account"
        meta:
          dimension:
            type: string

      - name: industry
        description: "Stock market industry for this account"
        meta:
          dimension:
            type: string

      - name: segment
        description: "The market Segment for this account (SMB, Midmarket, Enterprise)"
        meta:
          dimension:
            type: string
